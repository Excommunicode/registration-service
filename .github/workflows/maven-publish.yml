name: Maven Package

on: push

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Check and Build application
        run: |
          chmod a+x .github/workflows/build.sh
          ./.github/workflows/build.sh

      - name: Build and test with Maven
        run: mvn -B test --file pom.xml

      - name: Package application with Maven
        run: mvn -B package --file pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Build Docker images
        run: docker-compose build

      - name: Start services with docker-compose
        run: docker-compose up -d

      - name: Wait for services to be ready
        shell: bash {0}
        run: |
          echo "Waiting for services to be ready..."
          for i in {1..30}; do
            STATUS_FEATURE=$(curl -s -o /dev/null -w '%{http_code}' http://localhost:8080/actuator/health || echo "000")
            STATUS_REGISTRATION=$(curl -s -o /dev/null -w '%{http_code}' http://localhost:8081/actuator/health || echo "000")
            if [ "$STATUS_FEATURE" -eq 200 ] && [ "$STATUS_REGISTRATION" -eq 200 ]; then
              echo "Services are up and running."
              break
            else
              echo "Services are not ready yet. Retrying in 5 seconds..."
              sleep 5
            fi
            if [ "$i" -eq 30 ]; then
              echo "Services did not become ready in time."
              exit 1
            fi
          done


      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Newman
        run: npm install -g newman

      - name: Run Postman tests for Feature Status
        run: |
          newman run postman/feature-status.postman_collection.json \
          --reporters cli,json \
          --reporter-json-export results-feature-status.json

      - name: Run Postman tests for Registration Service
        run: |
          newman run postman/registration-service.postman_collection.json \
          --reporters cli,json \
          --reporter-json-export results-registration-service.json

      - name: Publish results (optional)
        run: |
          echo "Feature Status Results:"
          cat results-feature-status.json
          echo "Registration Service Results:"
          cat results-registration-service.json

      - name: Stop services
        run: docker-compose down
